#!/bin/sh

# Kill it! Kill it with fire!
pkill -KILL clover-mcp

HOME=/etc/libretro
corename=$1
core=$HOME/core/$1_libretro.so
rom=$2
filename=$(basename "$rom")
id=${filename%.*}
extension="${filename##*.}"
autosave="/var/cache/$id.state.auto"
rsram="/var/cache/$id.srm"
rsav="/var/cache/$id.sav"
t_suffix=_time.txt
demo_time=30
shift 2

while [ $# -gt 0 ]; do
  [ "$1" == "--load-state-file" ] && load=$2
  [ "$1" == "--save-on-quit" ] && save=$2
  [ "$1" == "--rollback-input-dir" ] && load=$2/savestate
  [ "$1" == "--rollback-output-dir" ] && save=$2/savestate
  [ "$1" == "--save-screenshot-on-quit" ] && screenshot=$2
  [ "$1" == "--save-data-backing-file" ] && sram=$2
  [ "$1" == "--graphic-filter" ] && filter=$2
  [ "$1" == "--video-mode" ] && [ "$2" == "crt-filter" ] && filter=crt720
  [ "$1" == "--video-mode" ] && [ "$2" == "keep-aspect-ratio" ] && filter=gpu720
  [ "$1" == "--video-mode" ] && [ "$2" == "pixel-perfect" ] && filter=ppu
  [ "$1" == "--ra-extra" ] && extra=$2
  [ "$1" == "--ra-nosaves" ] && nosaves=1
  [ "$1" == "--save-time-path" ] && timefile=$2
  [ "$1" == "--replay-inputs" ] && demo=1
  shift
done

[ -z "$timefile" ] && timefile=$load$t_suffix

[ ! -z "$demo" ] && load=$(dirname $load)/savestate

# saves if any
rm -f /var/cache/*.state /var/cache/*.auto /var/cache/*.srm /var/cache/*.sav
if [ ! -z "$load" ] && [ -f "$load" ] && [ -z "$nosaves" ]; then
  if [ $(hexdump -n 2 -e '1/1 "%02X"' "$load") == "1F8B" ]; then
    cp -f "$load" "$autosave.gz"
    gunzip -f "$autosave.gz"
  else
    cp -f "$load" "$autosave"
  fi
fi
# Nestopia names FDS saves as $id.sav, so here's a quick fix
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsav"
else
  [ ! -z "$sram" ] && [ -f "$sram" ] && cp -f "$sram" "$rsram"
fi

# core provided ratio for CRT mode
[ "$filter" == "crt720" ] && ratio=21 && smooth=false && crt=1
# core provided ratio for 4:3 mode
[ "$filter" == "gpu720" ] && ratio=21 && smooth=false
# pixel perfect - 1:1 for pixel perfect mode
[ "$filter" == "ppu" ] && ratio=20 && smooth=false

smooth=$(cat /etc/libretro/$filter.smooth)
sed -i -e 's/video_smooth = "[^"]*"/video_smooth = "'$smooth'"/g' /etc/libretro/retroarch.cfg
ratio=$(cat /etc/libretro/$filter.ratio)
sed -i -e 's/aspect_ratio_index = "[^"]*"/aspect_ratio_index = "'$ratio'"/g' /etc/libretro/retroarch.cfg
overlay=$(cat /etc/libretro/$filter.overlay)
sed -i -e 's/input_overlay_enable = "[^"]*"/input_overlay_enable = "'$overlay'"/g' /etc/libretro/retroarch.cfg

# Start timestamp
ts=$(date +"%s")
tm=0
[ -f "$timefile" ] && tm=$(cat "$timefile")

retroarch -c "$HOME/retroarch.cfg" -vfL "$core" "$rom" $extra &
rpid=$!

# searching for input devices
for i in $(ls /dev/input/event?) ;do
  local id=$(basename $i)
  local name=$(cat /sys/class/input/$id/device/name)
  [ "$name" == "sunxi-knob" ] && power_file=$i
  [ "$name" == "sunxi-keyboard" ] && reset_file=$i
  [ "$name" == "Nintendo Clovercon - controller1" ] && controller1_file=$i
  [ "$name" == "Nintendo Clovercon - controller2" ] && controller2_file=$i
done

dd if=$power_file of=/dev/null count=1 2> /dev/null &
power_pid=$!
dd if=$reset_file of=/dev/null count=1 2> /dev/null &
reset_pid=$!

# Demo mode enabled
if [ ! -z "$demo" ]; then
  if [ ! -z "$controller1_file" ]; then
    dd if=$controller1_file of=/dev/null count=1 2> /dev/null &
    anybutton1_pid=$!
  fi
  if [ ! -z "$controller2_file" ]; then
    dd if=$controller2_file of=/dev/null count=1 2> /dev/null &
    anybutton2_pid=$!
  fi
fi

sleep 3
rm -f /var/cache/*.state /var/cache/*.auto /var/cache/*.srm /var/cache/*.sav

# Playing games until reset pressed
while [ true ]; do
  kill -0 $rpid 2> /dev/null || break
  kill -0 $reset_pid 2> /dev/null || break
  kill -0 $power_pid 2> /dev/null || break
  if [ ! -z "$demo" ]; then
    # Exit on any button
    if [ ! -z "$anybutton1_pid" ]; then
      kill -0 $anybutton1_pid 2> /dev/null || break
    fi
    if [ ! -z "$anybutton2_pid" ]; then
      kill -0 $anybutton2_pid 2> /dev/null || break
    fi
    # Or after some time
    ts2=$(date +"%s")
    tp=$((ts2 - ts))
    [ "$tp" -ge "$demo_time" ] && break
  fi
done

kill $rpid 2> /dev/null
kill -KILL $reset_pid 2> /dev/null
kill -KILL $power_pid 2> /dev/null
[ ! -z "$anybutton1_pid" ] && kill -KILL $anybutton1_pid 2> /dev/null
[ ! -z "$anybutton2_pid" ] && kill -KILL $anybutton2_pid 2> /dev/null

[ ! -z "$save" ] && mkdir -p $(dirname "$save")
[ ! -z "$sram" ] && mkdir -p $(dirname "$sram")
[ ! -z "$screenshot" ] && mkdir -p $(dirname "$screenshot")

# Screenshot! It's not so fast...
[ -z "$screenshot" ] || [ -z "$nosaves" ] && fbgrab -z 0 "$screenshot"

# Saves!
[ ! -z "$save" ] && [ -f "$autosave" ] && [ -z "$nosaves" ] && gzip -f "$autosave" && mv -f "$autosave.gz" "$save"
if [ "$corename" == "nestopia" ] && [ "$extension" == "fds" ]; then
  [ ! -z "$sram" ] && [ -f "$rsav" ] && mv -f "$rsav" "$sram"
else
  [ ! -z "$sram" ] && [ -f "$rsram" ] && mv -f "$rsram" "$sram"
fi

# Time
ts2=$(date +"%s")
tm=$((tm + ts2 - ts))
echo $tm > "$timefile"

grep video_smooth /etc/libretro/retroarch.cfg | grep true && current_smooth=true || current_smooth=false
echo $current_smooth > /etc/libretro/$filter.smooth
grep video_smooth /etc/libretro/retroarch.cfg | grep true && current_overlay=true || current_overlay=false
echo $current_overlay > /etc/libretro/$filter.overlay
current_ratio=$(cat /etc/libretro/retroarch.cfg | grep "aspect_ratio_index" | sed 's/[^0-9]*//g')
echo $current_ratio > /etc/libretro/$filter.ratio

# Back to the shell
/etc/init.d/S81clover-mcp start
